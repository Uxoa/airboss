<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>{{title}}</title>
    <link rel="stylesheet" href="/css/styles.css">
</head>
<body>
<header>
    <a href="/" class="logo-link">
        <div class="logo-img">
            <img src="/images/logo01.png" alt="AirBoss Logo">
        </div>
        <span class="logo-text">AirBoss</span>
    </a>
    <nav>
        <a href="/dashboard" class="nav-link">Dashboard</a>
        <a href="/perfil" class="nav-link">My Profile</a>
        <a href="/reservas/view" class="nav-link">My Bookings</a>
        <a href="/logout" class="nav-link">Logout</a>
    </nav>
</header>

<main class="search-container">
    <h1>{{title}}</h1>

    {{#error}}
        <div class="error-message">
            <p>{{error}}</p>
        </div>
    {{/error}}

    {{#flights}}
        <div class="flight">
            <h2>Flight Number: {{flightId}}</h2>
            <p><strong>From:</strong> {{origin}} | <strong>To:</strong> {{destination}}</p>
            <p><strong>Departure:</strong> {{departureTime}}</p>
            <p><strong>Available Seats:</strong> {{availableSeats}}</p>

            <form id="bookingForm-{{flightId}}">
                <input type="hidden" name="flightId" value="{{flightId}}">
                <input type="hidden" id="userId-{{flightId}}" value="{{userId}}"> <!-- ‚úÖ Se asegura de pasar userId -->
                <label for="availableSeats-{{flightId}}">Seats to Reserve:</label>
                <input type="number" id="availableSeats-{{flightId}}" min="1" max="{{availableSeats}}" required>
                <button type="button" class="btn btn-primary" onclick="submitBooking('{{flightId}}', '{{userId}}')">Book Now</button>
            </form>
        </div>
    {{/flights}}

    {{^flights}}
        <p class="no-flights">No flights found for the selected criteria.</p>
    {{/flights}}

    <a href="/search" class="btn">Back to search</a>
</main>

<script>
    async function submitBooking(flightId, userId) {
        console.log("üì§ Enviando reserva para Flight ID:", flightId, "User ID:", userId);

        const availableSeats = parseInt(document.getElementById(`availableSeats-${flightId}`).value);

        if (!userId || !flightId || isNaN(availableSeats)) {
            alert("‚ö†Ô∏è Error: Missing data. Please check your inputs.");
            return;
        }

        const requestData = { userId, flightId, availableSeats };

        try {
            const response = await fetch('/api/bookings/create', {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify(requestData)
            });

            if (!response.ok) {
                throw new Error(await response.text()); // ‚úÖ Captura errores del backend
            }

            const redirectUrl = await response.text();
            console.log("üîÄ Redirigiendo a:", redirectUrl);

            // ‚úÖ Verifica que la respuesta sea una URL v√°lida antes de redirigir
            if (!redirectUrl.startsWith("/api/bookings/confirm")) {
                throw new Error("Unexpected response from server.");
            }

            window.location.href = redirectUrl;
        } catch (error) {
            console.error("‚ùå Error en reserva:", error);
            alert(`‚ö†Ô∏è Error: ${error.message}`);
        }
    }

</script>

    </body>
</html>
